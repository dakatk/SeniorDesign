package main;

import fft.FFT;

import java.util.Arrays;
import java.util.List;

public class Main {

    public static void main(String[] args) {

        // From gyroscope data
        Double[] rawValues = {2.69,16.11,21.00,70.80,105.16,105.22,99.85,91.80,68.05,57.86,47.97,38.33,21.61,13.67,4.70,-4.64,-24.72,
                -34.97,-44.80,-53.89,-70.56,-77.58,-84.23,-90.33,-101.68,-107.12,-111.88,-117.86,-132.39,-142.15,-150.21,-155.15,
                -167.48,-172.49,-172.55,-166.69,-148.32,-139.47,-140.38,-140.99,-150.21,-152.77,-148.07,-127.93,-62.50,-34.48,-6.10,
                16.05,50.23,62.44,67.38,71.17,72.69,78.67,81.18,71.17,7.93,-10.74,-20.26,-30.27,-67.81,-78.80,-82.28,-81.30,-57.43,-34.61,
                -9.46,15.44,62.26,85.63,106.93,124.51,142.58,139.53,140.20,148.25,175.60,177.92,174.74,170.17,135.99,140.14,149.05,157.78,
                138.73,120.67,108.34,96.56,75.81,65.43,57.50,49.99,31.49,20.75,10.80,4.39,-3.17,-8.67,-17.40,-29.30,-53.10,-63.66,-73.49,
                -81.67,-95.21,-101.20,-107.85,-115.48,-130.55,-140.38,-152.59,-154.72,-158.39,-159.97,-162.17,-164.37,-162.78,-154.66,
                -154.24,-153.38,-145.02,-144.84,-112.18,-56.27,-12.94,-6.84,-5.86,-8.85,-22.03,-30.33,-41.69,-33.39,-2.08,-2.75,-3.42,-3.78,
                0.73,-0.12,-0.12,1.59,2.14,0.37,-0.24,1.95,2.26,3.36,5.80,9.46,26.06,40.28,57.62,76.54,119.14,142.09,167.42,194.95,213.68,
                209.96,199.46,182.68,158.33,150.63,144.90,138.92,126.77,127.08,129.58,135.07,136.84,128.42,119.20,108.95,85.75,77.27,68.79,
                61.28,44.98,36.62,27.89,18.55,0.61,-7.63,-16.48,-25.27,-42.05,-49.38,-55.73,-62.19,-75.44,-80.87,-85.63,-89.60,-99.49,-103.88,
                -107.97,-108.64,-110.23,-110.05,-109.01,-108.76,-108.28,-107.36,-109.74,-112.61,-117.86,-116.39,-113.83,-114.56,-112.30,
                -110.11,-114.26,-113.83,-118.35,-117.25,-113.22,-103.88,-67.08,-50.84,-40.10,-33.75,-34.55,-35.34,-37.35,-40.65,-32.71,-28.81,
                -27.04,-28.08,-35.58,-40.95,-46.02,-49.50,-47.61,-41.81,-33.45,-23.74,1.53,13.61,21.48,24.84,22.77,19.84,15.87,10.99,2.81,
                -0.12,-2.69,-3.78,-3.42,-2.56,-0.79,1.65,7.93,11.05,14.34,17.76,25.09,30.33,37.60,47.36,70.98,83.31,96.13,108.46,126.53,134.70,
                147.77,161.44,181.09,177.67,161.44,145.51,133.85,129.64,126.22,128.17,129.09,129.88,128.30,125.61,121.28,117.92,110.47,102.97,
                94.97,92.53,90.52,89.72,83.98,81.67,77.21,71.11,56.64,48.22,39.00,29.30,7.75,-2.99,-12.94,-22.46,-39.49,-47.61,-54.99,-61.46,
                -72.20,-76.97,-81.18,-85.21,-90.33,-91.19,-92.35,-93.38,-97.41,-99.79,-101.50,-102.97,-106.99,-106.81,-105.29,-103.52,-104.49,
                -103.94,-106.38,-106.45,-105.59,-105.04,-104.74,-107.30,-108.83,-112.98,-113.71,-113.04,-110.05,-105.77,-97.72,-85.14,-58.47,
                -51.88,-48.52,-50.11,-53.28,-39.67,-24.11,-12.15,-5.92,-11.66,-16.60,-20.94,-29.05,-32.10,-34.30,-36.07,-38.21,-35.03,-28.56,
                -20.32,-1.89,7.45,15.93,22.22,25.27,23.32,20.26,16.42,8.61,5.31,2.56,0.73,-0.98,-1.04,-0.37,0.55,3.05,5.13,8.18,12.08,23.19,
                30.52,39.06,49.26,73.85,87.22,99.91,110.66,123.41,123.72,125.55,131.77,148.50,155.33,158.63,154.36,138.06,128.05,120.36,116.03,
                119.45,122.50,121.70,119.57,112.67,107.91,101.62,96.62,94.48,97.72,96.98,96.07,97.66,96.37,94.85,91.19,83.07,77.64,70.56,62.81,
                45.29,36.68,28.87,21.00,5.92,-0.61,-6.10,-11.84,-23.86,-29.72,-35.40,-40.53,-49.44,-52.43,-54.57,-56.46,-61.34,-65.12,-69.27,
                -73.36,-81.60,-86.06,-90.21,-93.20,-94.91,-94.60,-94.48,-95.28,-98.33,-102.11,-105.29,-106.14,-104.74,-104.31,-103.21,-102.29,
                -105.35,-106.26,-105.22,-104.92,-102.23,-103.09,-104.98,-104.68,-102.11,-104.55,-104.86,-104.80,-94.12,-83.50,-72.39,-64.45,
                -61.34,-58.29,-56.52,-56.70,-37.78,-28.26,-22.83,-19.90,-16.11,-13.73,-12.02,-11.11,-11.60,-13.37,-15.87,-19.35,-28.26,-30.88,
                -31.74,-30.94,-24.54,-19.96,-15.44,-11.23,-2.87,1.22,5.31,8.79,13.00,13.24,13.12,13.06,

                // Zeroes padded to get a data set that has 2^N length
                0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0};

        List<Double> values = Arrays.asList(rawValues);
        List<Double> fftOutput = new FFT().computeMagnitudes(values);

        fftOutput.forEach(System.out::println);

        double Fs = 250; // Probably

        System.out.print("Frequency: ");
        System.out.println(new FFT().centerFrequency(values, Fs));

        // so the old guys in the back can see:
        for (int i = 0; i < 50; i ++)
            System.out.println(' ');
    }
}